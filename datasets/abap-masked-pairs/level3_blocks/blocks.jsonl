{"id":"abap_block_52e18fb8","level":3,"task":"implement_block","type":"METHOD","masked":"    METHOD constructor.\n<MASK>\nENDMETHOD.","target":"name = iv_name.\n      email = iv_email.\n      age = iv_age.\n      is_active = abap_true.","context":{"blockType":"METHOD","lineStart":120,"lineEnd":125,"statementCount":6}}
{"id":"abap_block_f3de910b","level":3,"task":"implement_block","type":"METHOD","masked":"    METHOD get_full_info.\n<MASK>\nENDMETHOD.","target":"DATA(lv_status) = COND string( WHEN is_active = abap_true THEN 'active' ELSE 'inactive' ).\n      rv_info = |Name: { name }, Email: { email }, Age: { age }, Status: { lv_status }|.","context":{"blockType":"METHOD","lineStart":127,"lineEnd":130,"statementCount":4}}
{"id":"abap_block_da66ab60","level":3,"task":"implement_block","type":"METHOD","masked":"    METHOD constructor.\n<MASK>\nENDMETHOD.","target":"min = 0.\n      max = 0.\n      sum = 0.\n      count = 0.\n      average = 0.","context":{"blockType":"METHOD","lineStart":135,"lineEnd":141,"statementCount":7}}
{"id":"abap_block_caba35be","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD greet_user.\n<MASK>\nENDMETHOD.","target":"rv_greeting = |Hello, { iv_name }!|.","context":{"blockType":"METHOD","lineStart":145,"lineEnd":147,"statementCount":3}}
{"id":"abap_block_cd240418","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD calculate_area_perimeter.\n<MASK>\nENDMETHOD.","target":"ev_area = iv_length * iv_width.\n    ev_perimeter = 2 * ( iv_length + iv_width ).","context":{"blockType":"METHOD","lineStart":150,"lineEnd":153,"statementCount":4}}
{"id":"abap_block_2802f16a","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","target":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","context":{"blockType":"IF","lineStart":157,"lineEnd":160,"statementCount":3}}
{"id":"abap_block_037f355b","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD check_age.\n<MASK>\nENDMETHOD.","target":"rv_group = COND string( WHEN iv_age >= 18 THEN 'Adult' ELSE 'Minor' ).","context":{"blockType":"METHOD","lineStart":165,"lineEnd":167,"statementCount":3}}
{"id":"abap_block_b3f36996","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD sum_numbers.\n<MASK>\nENDMETHOD.","target":"rv_sum = REDUCE i( INIT x = 0 FOR n IN it_numbers NEXT x = x + n ).","context":{"blockType":"METHOD","lineStart":170,"lineEnd":172,"statementCount":3}}
{"id":"abap_block_1df7b063","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD filter_even_numbers.\n<MASK>\nENDMETHOD.","target":"rt_even = VALUE #( FOR n IN it_numbers WHERE ( n MOD 2 = 0 ) ( n ) ).","context":{"blockType":"METHOD","lineStart":175,"lineEnd":177,"statementCount":3}}
{"id":"abap_block_ce6137a1","level":3,"task":"implement_block","type":"IF","masked":"      IF sy-subrc = 0.\n        lt_wordcount[ table_line = lv_word ] += 1.\n      ELSE.\n        INSERT lv_word INTO TABLE lt_wordcount.\n        lt_wordcount[ table_line = lv_word ] = 1.\n      ENDIF.","target":"      IF sy-subrc = 0.\n        lt_wordcount[ table_line = lv_word ] += 1.\n      ELSE.\n        INSERT lv_word INTO TABLE lt_wordcount.\n        lt_wordcount[ table_line = lv_word ] = 1.\n      ENDIF.","context":{"blockType":"IF","lineStart":187,"lineEnd":192,"statementCount":6}}
{"id":"abap_block_c5fc70af","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD create_user.\n<MASK>\nENDMETHOD.","target":"ro_user = NEW lcl_user( iv_name = iv_name iv_email = iv_email iv_age = iv_age ).","context":{"blockType":"METHOD","lineStart":198,"lineEnd":200,"statementCount":3}}
{"id":"abap_block_5a07b807","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD update_user_age.\n<MASK>\nENDMETHOD.","target":"co_user->age = iv_new_age.","context":{"blockType":"METHOD","lineStart":203,"lineEnd":205,"statementCount":3}}
{"id":"abap_block_5c1480e6","level":3,"task":"implement_block","type":"IF","masked":"    IF lines( it_numbers ) = 0.\n      rv_avg = 0.\n      RETURN.\n    ENDIF.","target":"    IF lines( it_numbers ) = 0.\n      rv_avg = 0.\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":209,"lineEnd":212,"statementCount":4}}
{"id":"abap_block_dfd60d93","level":3,"task":"implement_block","type":"IF","masked":"        IF iv_filename IS INITIAL.\n          RAISE EXCEPTION TYPE cx_sy_file_open_mode\n            EXPORTING textid = cx_sy_file_open_mode=>file_not_found.\n        ENDIF.","target":"        IF iv_filename IS INITIAL.\n          RAISE EXCEPTION TYPE cx_sy_file_open_mode\n            EXPORTING textid = cx_sy_file_open_mode=>file_not_found.\n        ENDIF.","context":{"blockType":"IF","lineStart":220,"lineEnd":223,"statementCount":3}}
{"id":"abap_block_e98ed99f","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD factorial.\n<MASK>\nENDMETHOD.","target":"rv_fact = COND #( WHEN iv_n <= 1 THEN 1 ELSE iv_n * me->factorial( iv_n - 1 ) ).","context":{"blockType":"METHOD","lineStart":235,"lineEnd":237,"statementCount":3}}
{"id":"abap_block_96e4d234","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD get_grade.\n<MASK>\nENDMETHOD.","target":"rv_grade = SWITCH string(\n      WHEN iv_score >= 90 THEN 'A'\n      WHEN iv_score >= 80 THEN 'B'\n      WHEN iv_score >= 70 THEN 'C'\n      WHEN iv_score >= 60 THEN 'D'\n      ELSE 'F'\n    ).","context":{"blockType":"METHOD","lineStart":240,"lineEnd":248,"statementCount":3}}
{"id":"abap_block_9c58dfa5","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD process_interface.\n<MASK>\nENDMETHOD.","target":"CASE type of iv_data.\n      WHEN string.\n        rv_result = |String: { iv_data }|.\n      WHEN i.\n        rv_result = |Integer: { iv_data }|.\n      WHEN f.\n        rv_result = |Float: { iv_data }|.\n      WHEN abap_bool.\n        rv_result = |Boolean: { iv_data }|.\n      WHEN OTHERS.\n        rv_result = 'Unknown type'.\n    ENDCASE.","context":{"blockType":"METHOD","lineStart":251,"lineEnd":264,"statementCount":14}}
{"id":"abap_block_ba334160","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_email IS INITIAL.\n      RAISE EXCEPTION TYPE cx_sy_conversion_error\n        EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n    ENDIF.","target":"    IF iv_email IS INITIAL.\n      RAISE EXCEPTION TYPE cx_sy_conversion_error\n        EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n    ENDIF.","context":{"blockType":"IF","lineStart":268,"lineEnd":271,"statementCount":3}}
{"id":"abap_block_6160d557","level":3,"task":"implement_block","type":"IF","masked":"      IF lv_user IS INITIAL OR lv_domain IS INITIAL.\n        RAISE EXCEPTION TYPE cx_sy_conversion_error\n          EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n      ENDIF.","target":"      IF lv_user IS INITIAL OR lv_domain IS INITIAL.\n        RAISE EXCEPTION TYPE cx_sy_conversion_error\n          EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n      ENDIF.","context":{"blockType":"IF","lineStart":274,"lineEnd":277,"statementCount":3}}
{"id":"abap_block_a7416529","level":3,"task":"implement_block","type":"IF","masked":"      IF lv_domain CP '*.*'.\n        RETURN.\n      ELSE.\n        RAISE EXCEPTION TYPE cx_sy_conversion_error\n          EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n      ENDIF.","target":"      IF lv_domain CP '*.*'.\n        RETURN.\n      ELSE.\n        RAISE EXCEPTION TYPE cx_sy_conversion_error\n          EXPORTING textid = cx_sy_conversion_error=>input_invalid.\n      ENDIF.","context":{"blockType":"IF","lineStart":278,"lineEnd":283,"statementCount":5}}
{"id":"abap_block_47871e33","level":3,"task":"implement_block","type":"IF","masked":"    IF lines( it_numbers ) = 0.\n      RETURN.\n    ENDIF.","target":"    IF lines( it_numbers ) = 0.\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":293,"lineEnd":295,"statementCount":3}}
{"id":"abap_block_4aaa12d2","level":3,"task":"implement_block","type":"IF","masked":"      IF lv_num < ro_stats->min.\n        ro_stats->min = lv_num.\n      ENDIF.","target":"      IF lv_num < ro_stats->min.\n        ro_stats->min = lv_num.\n      ENDIF.","context":{"blockType":"IF","lineStart":301,"lineEnd":303,"statementCount":3}}
{"id":"abap_block_9c7c6773","level":3,"task":"implement_block","type":"IF","masked":"      IF lv_num > ro_stats->max.\n        ro_stats->max = lv_num.\n      ENDIF.","target":"      IF lv_num > ro_stats->max.\n        ro_stats->max = lv_num.\n      ENDIF.","context":{"blockType":"IF","lineStart":304,"lineEnd":306,"statementCount":3}}
{"id":"abap_block_a3d104ef","level":3,"task":"implement_block","type":"LOOP","masked":"    LOOP AT lt_wordcount INTO DATA(lv_word).\n      WRITE: / |Word: { lv_word }, Count: { lt_wordcount[ lv_word ] }|.\n    ENDLOOP.","target":"    LOOP AT lt_wordcount INTO DATA(lv_word).\n      WRITE: / |Word: { lv_word }, Count: { lt_wordcount[ lv_word ] }|.\n    ENDLOOP.","context":{"blockType":"LOOP","lineStart":344,"lineEnd":346,"statementCount":3}}
{"id":"abap_block_af0bb492","level":3,"task":"implement_block","type":"LOOP","masked":"    LOOP AT lt_scores INTO DATA(lv_score).\n      DATA(lv_grade) = get_grade( lv_score ).\n      WRITE: / |Score { lv_score }: Grade { lv_grade }|.\n    ENDLOOP.","target":"    LOOP AT lt_scores INTO DATA(lv_score).\n      DATA(lv_grade) = get_grade( lv_score ).\n      WRITE: / |Score { lv_score }: Grade { lv_grade }|.\n    ENDLOOP.","context":{"blockType":"LOOP","lineStart":372,"lineEnd":375,"statementCount":4}}
{"id":"abap_block_8025265e","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD greet_user.\n<MASK>\nENDMETHOD.","target":"\" Concatenate greeting\n    rv_greeting = |Hello, { iv_name }!|.","context":{"blockType":"METHOD","lineStart":65,"lineEnd":68,"statementCount":4}}
{"id":"abap_block_30080755","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD calculate_area.\n<MASK>\nENDMETHOD.","target":"rv_area = iv_length * iv_width.","context":{"blockType":"METHOD","lineStart":70,"lineEnd":72,"statementCount":3}}
{"id":"abap_block_40c990f6","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD check_age.\n<MASK>\nENDMETHOD.","target":"rv_group = COND string(\n      WHEN iv_age >= 18 THEN 'Adult'\n      ELSE 'Minor'\n    ).","context":{"blockType":"METHOD","lineStart":74,"lineEnd":79,"statementCount":3}}
{"id":"abap_block_8c8f564c","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD sum_numbers.\n<MASK>\nENDMETHOD.","target":"rv_sum = REDUCE i( INIT x = 0 FOR n IN it_numbers NEXT x = x + n ).","context":{"blockType":"METHOD","lineStart":81,"lineEnd":83,"statementCount":3}}
{"id":"abap_block_96db87cf","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD create_user.\n<MASK>\nENDMETHOD.","target":"rs_user = VALUE ty_user(\n      name      = iv_name\n      email     = iv_email\n      age       = iv_age\n      is_active = abap_true\n    ).","context":{"blockType":"METHOD","lineStart":85,"lineEnd":92,"statementCount":3}}
{"id":"abap_block_430b1a35","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD filter_even_numbers.\n<MASK>\nENDMETHOD.","target":"rt_even_numbers = VALUE #( FOR n IN it_numbers WHERE ( n MOD 2 = 0 ) ( n ) ).","context":{"blockType":"METHOD","lineStart":94,"lineEnd":96,"statementCount":3}}
{"id":"abap_block_6f13b756","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD format_name.\n<MASK>\nENDMETHOD.","target":"rv_formatted = |{ to_upper( iv_first_name ) }, { to_upper( iv_last_name ) }|.","context":{"blockType":"METHOD","lineStart":98,"lineEnd":100,"statementCount":3}}
{"id":"abap_block_34cb5f94","level":3,"task":"implement_block","type":"IF","masked":"        IF iv_b = 0.\n          RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n            EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n        ENDIF.","target":"        IF iv_b = 0.\n          RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n            EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n        ENDIF.","context":{"blockType":"IF","lineStart":104,"lineEnd":107,"statementCount":3}}
{"id":"abap_block_90a7caa5","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD constructor.\n<MASK>\nENDMETHOD.","target":"CLEAR mt_history.","context":{"blockType":"METHOD","lineStart":31,"lineEnd":33,"statementCount":3}}
{"id":"abap_block_85dd7e42","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD add.\n<MASK>\nENDMETHOD.","target":"rv_result = iv_a + iv_b.\n    APPEND |{ iv_a } + { iv_b } = { rv_result }| TO mt_history.","context":{"blockType":"METHOD","lineStart":35,"lineEnd":38,"statementCount":4}}
{"id":"abap_block_22a93572","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD subtract.\n<MASK>\nENDMETHOD.","target":"rv_result = iv_a - iv_b.\n    APPEND |{ iv_a } - { iv_b } = { rv_result }| TO mt_history.","context":{"blockType":"METHOD","lineStart":40,"lineEnd":43,"statementCount":4}}
{"id":"abap_block_dd294f94","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD multiply.\n<MASK>\nENDMETHOD.","target":"rv_result = iv_a * iv_b.\n    APPEND |{ iv_a } * { iv_b } = { rv_result }| TO mt_history.","context":{"blockType":"METHOD","lineStart":45,"lineEnd":48,"statementCount":4}}
{"id":"abap_block_919e20b4","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","target":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","context":{"blockType":"IF","lineStart":51,"lineEnd":54,"statementCount":3}}
{"id":"abap_block_9f532e7c","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD get_history.\n<MASK>\nENDMETHOD.","target":"rt_history = mt_history.","context":{"blockType":"METHOD","lineStart":59,"lineEnd":61,"statementCount":3}}
{"id":"abap_block_0bb78024","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD clear_history.\n<MASK>\nENDMETHOD.","target":"CLEAR mt_history.","context":{"blockType":"METHOD","lineStart":63,"lineEnd":65,"statementCount":3}}
{"id":"abap_block_87964d5b","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD greet_user.\n<MASK>\nENDMETHOD.","target":"rv_greeting = |Hello, { iv_name }!|.","context":{"blockType":"METHOD","lineStart":156,"lineEnd":158,"statementCount":3}}
{"id":"abap_block_5e29d150","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD calculate_area.\n<MASK>\nENDMETHOD.","target":"rv_area = iv_length * iv_width.","context":{"blockType":"METHOD","lineStart":160,"lineEnd":162,"statementCount":3}}
{"id":"abap_block_43383229","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD check_age.\n<MASK>\nENDMETHOD.","target":"rv_group = COND string(\n      WHEN iv_age >= 18 THEN 'Adult'\n      ELSE 'Minor'\n    ).","context":{"blockType":"METHOD","lineStart":164,"lineEnd":169,"statementCount":3}}
{"id":"abap_block_9247b3c0","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD sum_numbers.\n<MASK>\nENDMETHOD.","target":"rv_total = REDUCE i( INIT x = 0 FOR <num> IN it_numbers NEXT x = x + <num> ).","context":{"blockType":"METHOD","lineStart":171,"lineEnd":173,"statementCount":3}}
{"id":"abap_block_f4ba5d3f","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD create_user.\n<MASK>\nENDMETHOD.","target":"rs_user = VALUE ty_user(\n      name      = iv_name\n      email     = iv_email\n      age       = iv_age\n      is_active = abap_true\n    ).","context":{"blockType":"METHOD","lineStart":175,"lineEnd":182,"statementCount":3}}
{"id":"abap_block_26cf42d7","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD filter_even_numbers.\n<MASK>\nENDMETHOD.","target":"rt_even = VALUE #( FOR <num> IN it_numbers WHERE ( <num> MOD 2 = 0 ) ( <num> ) ).","context":{"blockType":"METHOD","lineStart":184,"lineEnd":186,"statementCount":3}}
{"id":"abap_block_2f15eb24","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD format_name.\n<MASK>\nENDMETHOD.","target":"rv_formatted = |{ iv_first && ',' && iv_last }|.\n    rv_formatted = |{ iv_first->to_upper( ) }, { iv_last->to_upper( ) }|.","context":{"blockType":"METHOD","lineStart":188,"lineEnd":191,"statementCount":4}}
{"id":"abap_block_0d5af08a","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","target":"    IF iv_b = 0.\n      RAISE EXCEPTION TYPE cx_sy_arithmetic_error\n        EXPORTING textid = cx_sy_arithmetic_error=>division_by_zero.\n    ENDIF.","context":{"blockType":"IF","lineStart":194,"lineEnd":197,"statementCount":3}}
{"id":"abap_block_84c2fd7c","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_n <= 1.\n      rv_fib = iv_n.\n    ELSE.\n      rv_fib = lcl_functions=>fibonacci( iv_n = iv_n - 1 ) + lcl_functions=>fibonacci( iv_n = iv_n - 2 ).\n    ENDIF.","target":"    IF iv_n <= 1.\n      rv_fib = iv_n.\n    ELSE.\n      rv_fib = lcl_functions=>fibonacci( iv_n = iv_n - 1 ) + lcl_functions=>fibonacci( iv_n = iv_n - 2 ).\n    ENDIF.","context":{"blockType":"IF","lineStart":202,"lineEnd":206,"statementCount":5}}
{"id":"abap_block_884e9617","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD process_text.\n<MASK>\nENDMETHOD.","target":"DATA(lt_operations) = VALUE string_table(\n      ( 'upper' ) ( 'lower' ) ( 'reverse' ) ( 'length' )\n    ).\n    CASE iv_operation.\n      WHEN 'upper'.\n        rv_result = iv_text.\n        rv_result = rv_result->to_upper( ).\n      WHEN 'lower'.\n        rv_result = iv_text.\n        rv_result = rv_result->to_lower( ).\n      WHEN 'reverse'.\n        rv_result = ''.\n        DO strlen( iv_text ) TIMES.\n          rv_result = rv_result && iv_text+strlen( iv_text )-sy-index(1)(1).\n        ENDDO.\n      WHEN 'length'.\n        rv_result = |{ strlen( iv_text ) }|.\n      WHEN OTHERS.\n        rv_result = iv_text.\n    ENDCASE.","context":{"blockType":"METHOD","lineStart":209,"lineEnd":230,"statementCount":20}}
{"id":"abap_block_91a3819a","level":3,"task":"implement_block","type":"IF","masked":"    IF it_data IS INITIAL.\n      rs_analysis = VALUE #( total = 0 average = 0 maximum = 0 ).\n    ELSE.\n      rs_analysis-total = REDUCE i( INIT x = 0 FOR <n> IN it_data NEXT x = x + <n> ).\n      rs_analysis-average = rs_analysis-total / lines( it_data ).\n      rs_analysis-maximum = REDUCE i( INIT x = -999999 FOR <n> IN it_data NEXT x = COND #( WHEN <n> > x THEN <n> ELSE x ) ).\n    ENDIF.","target":"    IF it_data IS INITIAL.\n      rs_analysis = VALUE #( total = 0 average = 0 maximum = 0 ).\n    ELSE.\n      rs_analysis-total = REDUCE i( INIT x = 0 FOR <n> IN it_data NEXT x = x + <n> ).\n      rs_analysis-average = rs_analysis-total / lines( it_data ).\n      rs_analysis-maximum = REDUCE i( INIT x = -999999 FOR <n> IN it_data NEXT x = COND #( WHEN <n> > x THEN <n> ELSE x ) ).\n    ENDIF.","context":{"blockType":"IF","lineStart":233,"lineEnd":239,"statementCount":7}}
{"id":"abap_block_80dd471c","level":3,"task":"implement_block","type":"IF","masked":"      ELSEIF lcl_functions=>is_number( lv_value ) = abap_true.\n        lv_new_value = lv_value * 2.\n      ELSE.\n        lv_new_value = lv_value.\n      ENDIF.","target":"      ELSEIF lcl_functions=>is_number( lv_value ) = abap_true.\n        lv_new_value = lv_value * 2.\n      ELSE.\n        lv_new_value = lv_value.\n      ENDIF.","context":{"blockType":"IF","lineStart":251,"lineEnd":255,"statementCount":5}}
{"id":"abap_block_aeea08d7","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_email IS INITIAL.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email is empty' ).\n      RETURN.\n    ENDIF.","target":"    IF iv_email IS INITIAL.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email is empty' ).\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":261,"lineEnd":264,"statementCount":4}}
{"id":"abap_block_772762e6","level":3,"task":"implement_block","type":"IF","masked":"    IF iv_email CP '*@*' = abap_false.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email must contain @' ).\n      RETURN.\n    ENDIF.","target":"    IF iv_email CP '*@*' = abap_false.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email must contain @' ).\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":265,"lineEnd":268,"statementCount":4}}
{"id":"abap_block_51c932ee","level":3,"task":"implement_block","type":"IF","masked":"    IF lines( lt_parts ) <> 2.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email format is invalid' ).\n      RETURN.\n    ENDIF.","target":"    IF lines( lt_parts ) <> 2.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Email format is invalid' ).\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":271,"lineEnd":274,"statementCount":4}}
{"id":"abap_block_0b8089ab","level":3,"task":"implement_block","type":"IF","masked":"    IF lv_username IS INITIAL OR lv_domain IS INITIAL.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Username or domain is empty' ).\n      RETURN.\n    ENDIF.","target":"    IF lv_username IS INITIAL OR lv_domain IS INITIAL.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Username or domain is empty' ).\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":277,"lineEnd":280,"statementCount":4}}
{"id":"abap_block_59c9027c","level":3,"task":"implement_block","type":"IF","masked":"    IF lv_domain CP '*.*' = abap_false.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Domain must contain a dot' ).\n      RETURN.\n    ENDIF.","target":"    IF lv_domain CP '*.*' = abap_false.\n      rs_validation = VALUE #( is_valid = abap_false message = 'Domain must contain a dot' ).\n      RETURN.\n    ENDIF.","context":{"blockType":"IF","lineStart":281,"lineEnd":284,"statementCount":4}}
{"id":"abap_block_b09bc464","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD batch_process.\n<MASK>\nENDMETHOD.","target":"rt_batches = VALUE #( ).\n    DATA(lv_count) = lines( it_items ).\n    DATA(lv_idx) = 1.\n    WHILE lv_idx <= lv_count.\n      DATA(lt_batch) = VALUE #( FOR i = lv_idx TO lv_idx + iv_batch_size - 1 WHERE ( i <= lv_count ) ( it_items[ i ] ) ).\n      APPEND lt_batch TO rt_batches.\n      lv_idx = lv_idx + iv_batch_size.\n    ENDWHILE.","context":{"blockType":"METHOD","lineStart":288,"lineEnd":297,"statementCount":10}}
{"id":"abap_block_68c2c336","level":3,"task":"implement_block","type":"IF","masked":"    IF cl_abap_typedescr=>describe_by_data( iv_value )->type_kind = cl_abap_typedescr=>typekind_string.\n      rv_is_string = abap_true.\n    ENDIF.","target":"    IF cl_abap_typedescr=>describe_by_data( iv_value )->type_kind = cl_abap_typedescr=>typekind_string.\n      rv_is_string = abap_true.\n    ENDIF.","context":{"blockType":"IF","lineStart":301,"lineEnd":303,"statementCount":3}}
{"id":"abap_block_fa03f692","level":3,"task":"implement_block","type":"IF","masked":"    IF lo_desc->type_kind = cl_abap_typedescr=>typekind_int OR\n       lo_desc->type_kind = cl_abap_typedescr=>typekind_p OR\n       lo_desc->type_kind = cl_abap_typedescr=>typekind_f.\n      rv_is_number = abap_true.\n    ENDIF.","target":"    IF lo_desc->type_kind = cl_abap_typedescr=>typekind_int OR\n       lo_desc->type_kind = cl_abap_typedescr=>typekind_p OR\n       lo_desc->type_kind = cl_abap_typedescr=>typekind_f.\n      rv_is_number = abap_true.\n    ENDIF.","context":{"blockType":"IF","lineStart":309,"lineEnd":313,"statementCount":3}}
{"id":"abap_block_2b790246","level":3,"task":"implement_block","type":"METHOD","masked":"  METHOD fibonacci.\n<MASK>\nENDMETHOD.","target":"\" Base case: fibonacci(0) = 0, fibonacci(1) = 1\n    rv_result = COND #( \n      WHEN iv_n <= 1 \n      THEN iv_n\n      ELSE fibonacci( iv_n - 1 ) + fibonacci( iv_n - 2 ) \n    ).","context":{"blockType":"METHOD","lineStart":20,"lineEnd":27,"statementCount":4}}